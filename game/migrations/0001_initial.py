# Generated by Django 3.0.7 on 2020-10-06 14:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bot_init', '0002_auto_20201006_1757'),
    ]

    operations = [
        migrations.CreateModel(
            name='BeginSurveyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('body', 'тело'), ('soul', 'душа'), ('spirit', 'дух')], max_length=16, verbose_name='Категория вопроса')),
                ('text', models.CharField(max_length=1000, verbose_name='Текст вопроса')),
            ],
            options={
                'verbose_name': 'Вопрос для начального тестирования',
                'verbose_name_plural': 'Вопросы для начального тестирования',
            },
        ),
        migrations.CreateModel(
            name='DailyTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('body', 'тело'), ('soul', 'душа'), ('spirit', 'дух')], max_length=16)),
                ('text', models.TextField()),
                ('week_day', models.CharField(choices=[('mon', 'понедельник'), ('tue', 'вторник'), ('wed', 'среда'), ('thu', 'четверг'), ('fri', 'пятница'), ('sat', 'суббота'), ('sun', 'воскресенье')], max_length=5)),
            ],
            options={
                'verbose_name': 'Задание для участников',
                'verbose_name_plural': 'Задания для участников',
            },
        ),
        migrations.CreateModel(
            name='MembersGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название группы')),
            ],
            options={
                'verbose_name': 'Группа участников',
                'verbose_name_plural': 'Группы участников',
            },
        ),
        migrations.CreateModel(
            name='RecordDailyTaskGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='RecordDailyTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selected', models.BooleanField(default=False)),
                ('is_done', models.BooleanField(default=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_tasks_records', to='game.RecordDailyTaskGroup')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_tasks_records', to='bot_init.Subscriber')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_tasks_records', to='game.DailyTask')),
            ],
        ),
        migrations.CreateModel(
            name='PointsRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_count', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_init.Subscriber')),
            ],
        ),
    ]
